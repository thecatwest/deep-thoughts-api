{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\catwe\\\\Desktop\\\\projects\\\\deep-thoughts-app\\\\client\\\\src\\\\components\\\\ThoughtList\\\\index.js\";\n// thought data component\n// by naming the directory ThoughtList and the file index.js, can simply import as ./component/ThoughtList instead of ...ThoughtList/ThoughtList.js\nimport React from 'react'; // instruct that ThoughtList component will receive thoughts and title props\n// destructure argument data to avoid using props.title or props.thoughts in JSX code\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThoughtList = ({\n  thoughts,\n  title\n}) => {\n  // if there are no thoughts, return header with info\n  if (!thoughts.length) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Thoughts Yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  } // otherwise, return a div with these HTML elements, etc\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), thoughts && // use map() fn to iterate of thoughts array\n    thoughts.map(thought =>\n    /*#__PURE__*/\n    // key prop helps React track which data needs to be re-rendered if something changes\n    // div for single thought by ID\n    _jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-header\",\n        children: [thought.username, \"thought on \", thought.createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: thought.thoughtText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: [\"Reactions: \", thought.reactionCount, \" || Click to\", ' ', thought.reactionCount ? 'see' : 'start', \" the discussion!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, thought._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ThoughtList;\nexport default ThoughtList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtList\");","map":{"version":3,"sources":["C:/Users/catwe/Desktop/projects/deep-thoughts-app/client/src/components/ThoughtList/index.js"],"names":["React","ThoughtList","thoughts","title","length","map","thought","username","createdAt","thoughtText","reactionCount","_id"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACzC;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAJwC,CAMzC;;;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,QAAQ,IACT;AACAA,IAAAA,QAAQ,CAACG,GAAT,CAAaC,OAAO;AAAA;AAChB;AACA;AACA;AAAuB,MAAA,SAAS,EAAC,WAAjC;AAAA,8BAEI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,mBACKA,OAAO,CAACC,QADb,iBAEgBD,OAAO,CAACE,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAIF,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oCACgBH,OAAO,CAACI,aADxB,kBACmD,GADnD,EAEKJ,OAAO,CAACI,aAAR,GAAwB,KAAxB,GAAgC,OAFrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,OAAUJ,OAAO,CAACK,GAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAlCD;;KAAMV,W;AAoCN,eAAeA,WAAf","sourcesContent":["// thought data component\r\n// by naming the directory ThoughtList and the file index.js, can simply import as ./component/ThoughtList instead of ...ThoughtList/ThoughtList.js\r\nimport React from 'react';\r\n\r\n// instruct that ThoughtList component will receive thoughts and title props\r\n// destructure argument data to avoid using props.title or props.thoughts in JSX code\r\nconst ThoughtList = ({ thoughts, title }) => {\r\n    // if there are no thoughts, return header with info\r\n    if (!thoughts.length) {\r\n        return <h3>No Thoughts Yet</h3>\r\n    }\r\n\r\n    // otherwise, return a div with these HTML elements, etc\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n            {thoughts &&\r\n            // use map() fn to iterate of thoughts array\r\n            thoughts.map(thought => (\r\n                // key prop helps React track which data needs to be re-rendered if something changes\r\n                // div for single thought by ID\r\n                <div key={thought._id} className=\"card mb-3\">\r\n                    {/* p element for username associated with thought and timestamp */}\r\n                    <p className=\"card-header\">\r\n                        {thought.username}\r\n                        thought on {thought.createdAt}\r\n                    </p>\r\n                    {/* div and p for thought text body */}\r\n                    <div className=\"card-body\">\r\n                        <p>{thought.thoughtText}</p>\r\n                        {/* p for reaction count; if no reactions, display 'start' instead of 'see' */}\r\n                        <p className=\"mb-0\">\r\n                            Reactions: {thought.reactionCount} || Click to{' '}\r\n                            {thought.reactionCount ? 'see' : 'start'} the discussion!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThoughtList;"]},"metadata":{},"sourceType":"module"}